name: CI/CD Pipeline

on:
  push:
    branches:
      - development

env:
  GCP_PROJECT: graceful-fact
  IMAGE_NAME: web-app-image
  GKE_CLUSTER: autopilot-cluster-1
  GKE_REGISTRY: web-app-docker
  GCR_ZONE: australia-southeast1  # Change to your region, e.g., 'us', 'eu', or 'asia'
  GITHUB_SHA: ${{ github.sha }}
  K8S_NAMESPACE: default  # Kubernetes namespace
  HELM_RELEASE_NAME: web-app-dev  # Helm release name

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate GitHub Actions with Google Cloud
      - name: Setup Google Cloud Authentication 
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker $GCR_ZONE-docker.pkg.dev

      - name: Build Docker Image
        run: |
          cd web-app && docker build -t $GCR_ZONE-docker.pkg.dev/$GCP_PROJECT/$GKE_REGISTRY/$IMAGE_NAME:$GITHUB_SHA .

      - name: Push Docker Image to GCR
        run: |
          cd web-app && docker push $GCR_ZONE-docker.pkg.dev/$GCP_PROJECT/$GKE_REGISTRY/$IMAGE_NAME:$GITHUB_SHA

  deploy:
    name: Deploy to GKE with Helm
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate GitHub Actions with Google Cloud
      - name: Setup Google Cloud Authentication 
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Connect to GKE Cluster
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GCP_PROJECT

      - name: Deploy with Helm
        run: |
          helm upgrade --install $HELM_RELEASE_NAME ./helm/web-app \
            --namespace $K8S_NAMESPACE \
            --set image.repository=$GCR_ZONE-docker.pkg.dev/$GCP_PROJECT/$IMAGE_NAME \
            --set image.tag=${{ github.sha }}
